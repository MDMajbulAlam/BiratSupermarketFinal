/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package admin.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.dao.BookInfoDAO;
import model.dao.BookTypeDAO;
import model.dao.LoginInfoDAO;
import model.to.BookTypeTO;
import model.to.LoginInfoTO;


public class ViewBookType extends javax.swing.JInternalFrame {

    List<BookTypeTO> allbook;
    int row;
    JPopupMenu popupmenu;

    public ViewBookType() {
        initComponents();
        bindBookType();
        row = -1;
        popupmenu = new JPopupMenu();
        JMenuItem jmiDelete = new JMenuItem("Delete This Record");
        JMenuItem jmiEdit = new JMenuItem("Edit This Record");
        popupmenu.add(jmiDelete);
        popupmenu.add(jmiEdit);
        jmiDelete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleteRecord();
            }
        });
        jmiEdit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                editRecord();
            }
        });
    }

    public void editRecord() {
        if (row != -1 && allbook != null && allbook.size() > 0) {
            BookTypeTO btto = allbook.get(row);
            if (btto != null) {
                AddBookType abt = new AddBookType(btto);
                abt.setVisible(true);
                getDesktopPane().add(abt);
                dispose();
            }
        }
    }

    private void deleteRecord() {
        if (row != -1 && allbook != null && allbook.size() > 0) {
            int Selection = JOptionPane.showConfirmDialog(this, "Are You Sure To Delete This Record ?", "Message From System", JOptionPane.YES_NO_OPTION);
            if (Selection == JOptionPane.YES_OPTION) {
                BookTypeTO bit = allbook.get(row);
                if (bit != null) {
                    BookTypeDAO action = new BookTypeDAO();
                    String message = "";
                    if (action.deleteRecord(bit.getTypeID())) {
                        message = "Record Is Deleted From The System";
                    } else {
                        message = action.getErrorMessage();
                    }
                    JOptionPane.showMessageDialog(this, message);
                    row = -1;
                    bindBookType();

                }
            }

        }
    }

    private void bindBookType() {

        allbook = new BookTypeDAO().getAllRecord();
        String[] columnNames = {"TypeID", "TypeName"};
        Object[][] data = null;

        if (allbook != null && allbook.size() > 0) {
            data = new Object[allbook.size()][columnNames.length];
            int i = 0;
            for (BookTypeTO bit : allbook) {
                data[i] = new Object[]{bit.getTypeID(), bit.getTypeName()};
                i++;
            }

        } else {
            data = new Object[1][columnNames.length];
            data[0] = new Object[]{"There Is no Record", "There is No Record"};

        }
        DefaultTableModel dtm = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tableBookType.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRefresh = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableBookType = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("View Book Type");

        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/ui/r5.png"))); // NOI18N
        btnRefresh.setText("Refresh ");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        tableBookType.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableBookType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBookTypeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableBookType);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(240, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableBookTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBookTypeMouseClicked
        //if(evt.getButton()==MouseEvent.BUTTON3){
        if (SwingUtilities.isRightMouseButton(evt)) {
            // JoptionPane.showMessageDialog(this,"Right Click");
            int rowpos = tableBookType.rowAtPoint(evt.getPoint());
            tableBookType.getSelectionModel().setSelectionInterval(rowpos, rowpos);
            popupmenu.show(tableBookType, evt.getX(), evt.getY());
            // System.out.Println("tableLoginInfo.getSelectedRow()");
            row = tableBookType.getSelectedRow();
    }//GEN-LAST:event_tableBookTypeMouseClicked
    }
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        bindBookType();
    }//GEN-LAST:event_btnRefreshActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableBookType;
    // End of variables declaration//GEN-END:variables
}
