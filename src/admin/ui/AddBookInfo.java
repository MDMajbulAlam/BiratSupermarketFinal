/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package admin.ui;

import Operations.Checks;
import java.beans.PropertyVetoException;
import java.util.List;
import javax.swing.JOptionPane;
import model.dao.BookInfoDAO;
import model.dao.BookTypeDAO;
import model.to.BookInfoTO;
import model.to.BookTypeTO;


public class AddBookInfo extends javax.swing.JInternalFrame {

    int BookID;

    public AddBookInfo() {
        initComponents();
        jcbTypeID.removeAllItems();
        jcbTypeID.addItem("Choose A TypeID");
        List<BookTypeTO> allbooktype = new BookTypeDAO().getAllRecord();
        if (allbooktype != null && allbooktype.size() > 0) {
            for (BookTypeTO bit : allbooktype) {
                jcbTypeID.addItem(bit);
            }
        }

    }

    public AddBookInfo(int BookId) {
        this();
        this.BookID = BookId;
        System.out.println(BookId);
        BookInfoTO bit = new BookInfoDAO().getRecord(BookID);
        if (bit != null) {
            jtfBookName.setText(bit.getBookName());
            jtfAuthorName.setText(bit.getAuthorName());
            jtfBookPrice.setText(String.valueOf(bit.getBookPrice()));
            jtfNoOfPages.setText(String.valueOf(bit.getNoOfPages()));
            jtfPublication.setText(bit.getPublication());
            jtfQuantity.setText(String.valueOf(bit.getQty()));
            for (int i = 1; i < jcbTypeID.getItemCount(); i++) {
                BookTypeTO btto = (BookTypeTO) jcbTypeID.getItemAt(i);
                if (btto.getTypeID().equals(bit.getTypeID())) {
                    jcbTypeID.setSelectedIndex(i);
                    break;
                }
            }
            setTitle("Update Book Informaion Record");
            btnBookInfo.setText("Update Book Information");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcbTypeID = new javax.swing.JComboBox();
        btnBookInfo = new javax.swing.JButton();
        jtfBookName = new javax.swing.JTextField();
        jtfAuthorName = new javax.swing.JTextField();
        jtfBookPrice = new javax.swing.JTextField();
        jtfNoOfPages = new javax.swing.JTextField();
        jtfPublication = new javax.swing.JTextField();
        jtfQuantity = new javax.swing.JTextField();

        jLabel2.setText("jLabel2");

        setClosable(true);
        setIconifiable(true);
        setTitle("Add Book Info");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Author Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Book Price");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("No Of Pages");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Type ID:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Qty");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Publication");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Book Name");

        jcbTypeID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBookInfo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBookInfo.setText("Add Book Info");
        btnBookInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbTypeID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfBookName, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                            .addComponent(jtfAuthorName, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                            .addComponent(jtfBookPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                            .addComponent(jtfNoOfPages, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                            .addComponent(jtfPublication, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                            .addComponent(jtfQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(btnBookInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBookInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfAuthorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfBookPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNoOfPages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbTypeID, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPublication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBookInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookInfoActionPerformed
        String message = "";
        String BookName = jtfBookName.getText().trim();
        boolean allvalid = true;
        if (Checks.isEmpty(BookName)) {
            allvalid = false;
            message = "Please fill Any Value in Book Name\n";
        }
        String AuthorName = jtfAuthorName.getText();
        if (Checks.isEmpty(AuthorName)) {
            allvalid = false;
            message += "Please fill Any Value in Author Name";
        }
        String BookPrice = jtfBookPrice.getText();
        if (Checks.isEmpty(BookPrice)) {
            allvalid = false;
            message += "Please fill Any Value in Book Price";
        }
        String NoOfPages = jtfNoOfPages.getText();
        if (Checks.isEmpty(NoOfPages)) {
            allvalid = false;
            message += "Please fill Any Value in No Of Pages";
        }
        if (jcbTypeID.getSelectedIndex() == 0) {
            allvalid = false;
            message += "Please Choose  Any  Type Name";
        }

        String Publication = jtfPublication.getText();
        if (Checks.isEmpty(Publication)) {
            allvalid = false;
            message += "Please fill Any Value in Publication";
        }
        String Quantity = jtfQuantity.getText();
        if (Checks.isEmpty(Publication)) {
            allvalid = false;
            message += "Please fill Any Value in Publication";
        } else if (Checks.isNumeric(NoOfPages)) {
            int nop = Integer.parseInt(NoOfPages);
            if (nop < 0) {
                allvalid = false;
                message += "No Of Pages Can Not Be Negative";
            }
        }
        if (Checks.isEmpty(Publication)) {
            allvalid = false;
            message += "Please fill Any Value in Publication";
        } else if (Checks.isNumeric(Quantity)) {
            int qtty = Integer.parseInt(Quantity);
            if (qtty < 0) {
                allvalid = false;
                message += "Quantity Can Not Be Negative";
            }
        }
        if (Checks.isFloat(BookPrice)) {
            float bkpr = Float.parseFloat(BookPrice);
            if (bkpr < 0) {
                allvalid = false;
                message += "Book Price Can Not Be Negative";
            }
        }
        if (allvalid) {
            BookTypeTO bit = (BookTypeTO) jcbTypeID.getSelectedItem();
            BookInfoTO data = new BookInfoTO();
            data.setBookName(BookName);
            data.setAuthorName(AuthorName);
            data.setBookPrice(Float.parseFloat(BookPrice));
            data.setNoOfPages(Integer.parseInt(NoOfPages));
            data.setTypeID(bit.getTypeID());
            data.setPublication(Publication);
            data.setQty(Integer.parseInt(Quantity));
            BookInfoDAO action = new BookInfoDAO();
            if (btnBookInfo.getText().contains("Add")) {
                if (action.insertRecord(data)) {
                    message = "new Book Information Is Added To  System";
                } else {
                    message = action.getErrorMessage();
                }
            } else if (btnBookInfo.getText().contains("Update")) {
                data.setBookID(BookID);
                if (action.updateRecord(data)) {
                    message = "new Book Information Is updated To  System";
                } else {
                    message = action.getErrorMessage();
                }
                ViewBookInfo vbi = new ViewBookInfo();
                vbi.setVisible(true);
                getDesktopPane().add(vbi);
                try {
                    vbi.setSelected(true);
                } catch (PropertyVetoException ex) {
                }
                dispose();
            }


        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnBookInfoActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox jcbTypeID;
    private javax.swing.JTextField jtfAuthorName;
    private javax.swing.JTextField jtfBookName;
    private javax.swing.JTextField jtfBookPrice;
    private javax.swing.JTextField jtfNoOfPages;
    private javax.swing.JTextField jtfPublication;
    private javax.swing.JTextField jtfQuantity;
    // End of variables declaration//GEN-END:variables
}
