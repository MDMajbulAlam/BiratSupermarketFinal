/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package admin.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.dao.BookInfoDAO;
import model.dao.BookTypeDAO;
import model.to.BookInfoTO;

/**
 *
 * @author DELL
 */
public class ViewBookInfo extends javax.swing.JInternalFrame {

    List<BookInfoTO>allbook;
    JPopupMenu popupMenu;
    int BookID;
    public ViewBookInfo() {
        initComponents();
        bindBookInfo();
        popupMenu=new JPopupMenu();
        JMenuItem jmiDelete=new JMenuItem("Delete This Record");
        JMenuItem jmiEdit=new JMenuItem("Edit This Record");
        popupMenu.add(jmiDelete);
        popupMenu.add(jmiEdit);
         jmiDelete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleteRecord();
            }
        });
         jmiEdit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                editRecord();
            }
        });
    }
    private void deleteRecord(){
        if(BookID!=0 && allbook!=null && allbook.size()>0){
     int selection=JOptionPane.showConfirmDialog(this, "Are You Sure To Delete This Record", "Message From System", JOptionPane.YES_NO_OPTION);
     if(selection==JOptionPane.YES_OPTION){
         String message="";
         BookInfoDAO action=new BookInfoDAO();
         if(action.deleteRecord(BookID)){
          message="Book Info Is Deleted From The System";
          bindBookInfo();
         }else{
             message=action.getErrorMessage();
         }
         JOptionPane.showMessageDialog(this, message);
         BookID=0;
  
     }
        }
       
    }
            
    private void editRecord(){
    if(BookID!=0 && allbook!=null && allbook.size()>0){
        AddBookInfo abi=new AddBookInfo(BookID);
        abi.setVisible(true);
        getDesktopPane().add(abi);
        try{
            abi.setSelected(true);
            
        }catch(PropertyVetoException ex){
            
        }
        dispose();
    }    
      
    }
    private void bindBookInfo(){
        allbook=new BookInfoDAO().getAllRecord();
        String[] columnNames = {"BookID", "BookName", "AuthorName", "BookPrice", "NoOfPages", "TypeName", "Publication","Qty"};
        Object[][] data = null;

        if (allbook != null && allbook.size() > 0) {
            data = new Object[allbook.size()][columnNames.length];
            int i = 0;
            for (BookInfoTO bit : allbook) {
                data[i] = new Object[]{bit.getBookID(), bit.getBookName(), bit.getAuthorName(), bit.getBookPrice(), bit.getNoOfPages(), bit.getTypeName(), bit.getPublication(),bit.getQty()};
                i++;
            }

        } else {
            data = new Object[1][columnNames.length];
            data[0] = new Object[]{"There Is no Record", "There is No Record", "There is No Record", "There is No Record", "There is No Record", "There is No Record", "There is No Record"};

        }
        DefaultTableModel dtm = new DefaultTableModel(data, columnNames) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableBookInfo.setAutoCreateRowSorter(true);
        tableBookInfo.getTableHeader().setReorderingAllowed(false);
        tableBookInfo.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableBookInfo = new javax.swing.JTable();
        btnRefreshBookInfo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("View Book Info");

        tableBookInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableBookInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBookInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBookInfo);

        btnRefreshBookInfo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnRefreshBookInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/admin/ui/r4.png"))); // NOI18N
        btnRefreshBookInfo.setText("Refresh");
        btnRefreshBookInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshBookInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
            .addGroup(layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(btnRefreshBookInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRefreshBookInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableBookInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBookInfoMouseClicked
       if (SwingUtilities.isRightMouseButton(evt)) {
            // JoptionPane.showMessageDialog(this,"Right Click");
            int rowpos = tableBookInfo.rowAtPoint(evt.getPoint());
            tableBookInfo.getSelectionModel().setSelectionInterval(rowpos, rowpos);
            popupMenu.show(tableBookInfo, evt.getX(), evt.getY());
            // System.out.println(tableBookInfo.getSelectedRow());
             //System.out.println(tableBookInfo.getValueAt(tableBookInfo.getSelectedRow(),0));
            BookID=Integer.parseInt(tableBookInfo.getValueAt(tableBookInfo.getSelectedRow(),0).toString());
        }
    }//GEN-LAST:event_tableBookInfoMouseClicked

    private void btnRefreshBookInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshBookInfoActionPerformed
        bindBookInfo();
    }//GEN-LAST:event_btnRefreshBookInfoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefreshBookInfo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableBookInfo;
    // End of variables declaration//GEN-END:variables
}
